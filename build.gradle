plugins {
    id 'me.tatarka.retrolambda' version '3.1.0'
    id 'java'
    id 'maven'
    id 'signing'
}

sourceCompatibility = '1.8'

group = 'com.apothesource.pillfill'
archivesBaseName = 'pf-java-client'
version = '1.0.2-SNAPSHOT'
def isReleaseVersion = !version.endsWith("SNAPSHOT")

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

retrolambda {
    //Pull the System environment settings if they exist- If not, use gradle.properties
    jdk System.getenv("JAVA8_HOME") != null ? System.getenv("JAVA8_HOME") : "${JAVA8_HOME}"
    oldJdk System.getenv("JAVA7_HOME") != null ? System.getenv("JAVA7_HOME") : "${JAVA7_HOME}"
    javaVersion JavaVersion.VERSION_1_7
}
dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.google.code.gson:gson:2.3'
    compile 'org.cryptonode.jncryptor:jncryptor:1.2.0'
    compile 'io.reactivex:rxjava:1.0.11'
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.4.0'
    compile 'com.google.guava:guava:18.0'

    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'junit:junit:4.12'
}
jar {
    manifest {
        attributes 'Main-Class': 'com.apothesource.pillfill.CommandlineClient'
    }
}
test{
    logging.setLevel(LogLevel.INFO)
}
javadoc{
    failOnError false
    exclude "**com/apothesource/pillfill/datamodel/**"
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.apothesource.pillfill.CommandlineClient'
    }
    archiveName = 'pf-java-client.jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives javadocJar, sourcesJar
}
signing {
    required isReleaseVersion
    if(isReleaseVersion) sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'PillFill Java Client'
                packaging 'jar'
                description 'A mHealth library to simplify accessing patient prescriptions, drug information, and prescriber/pharmacy data.'
                url 'https://developer.pillfill.com/'

                scm {
                    connection 'scm:git:git://github.com/pillfill/pf-java-client.git'
                    developerConnection 'scm:git:git://github.com/pillfill/pf-java-client.git'
                    url 'https://github.com/pillfill/pf-java-client'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://raw.githubusercontent.com/pillfill/pf-java-client/master/license.txt'
                    }
                }

                developers {
                    developer {
                        name 'Michael Ramirez'
                        email 'michael@pillfill.com'
                    }
                }
            }
        }
    }
}